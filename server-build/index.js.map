{
  "version": 3,
  "sources": ["../server/index.ts"],
  "sourcesContent": ["import path from 'node:path'\nimport { fileURLToPath } from 'node:url'\nimport { createRequestHandler } from '@remix-run/express'\nimport { broadcastDevReady, type ServerBuild } from '@remix-run/node'\nimport { ip as ipAddress } from 'address'\nimport chalk from 'chalk'\nimport closeWithGrace from 'close-with-grace'\nimport compression from 'compression'\nimport express from 'express'\nimport morgan from 'morgan'\nimport rateLimit from 'express-rate-limit'\n\nconst MODE = process.env.NODE_ENV\nconst BUILD_PATH = '../build/index.js'\nconst WATCH_PATH = '../build/version.txt'\n\nconst build: ServerBuild = await import(BUILD_PATH)\nlet devBuild = build\n\nconst app = express()\n\nconst getHost = (req: { get: (key: string) => string | undefined }) =>\n  req.get('X-Forwarded-Host') ?? req.get('host') ?? ''\n\n// ensure HTTPS only (X-Forwarded-Proto comes from Fly)\napp.use((req, res, next) => {\n  const proto = req.get('X-Forwarded-Proto')\n  const host = getHost(req)\n  if (proto === 'http') {\n    res.set('X-Forwarded-Proto', 'https')\n    res.redirect(`https://${host}${req.originalUrl}`)\n    return\n  }\n  next()\n})\n\n// no ending slashes for SEO reasons\n// https://github.com/epicweb-dev/epic-stack/discussions/108\napp.use((req, res, next) => {\n  if (req.path.endsWith('/') && req.path.length > 1) {\n    const query = req.url.slice(req.path.length)\n    const safepath = req.path.slice(0, -1).replace(/\\/+/g, '/')\n    res.redirect(301, safepath + query)\n  } else {\n    next()\n  }\n})\n\napp.use(compression())\n\n// http://expressjs.com/en/advanced/best-practice-security.html#at-a-minimum-disable-x-powered-by-header\napp.disable('x-powered-by')\n\n// Remix fingerprints its assets so we can cache forever.\napp.use(\n  '/build',\n  express.static('public/build', { immutable: true, maxAge: '1y' }),\n)\n\n// Aggressively cache fonts for a year\napp.use(\n  '/fonts',\n  express.static('public/fonts', { immutable: true, maxAge: '1y' }),\n)\n\n// Everything else (like favicon.ico) is cached for an hour. You may want to be\n// more aggressive with this caching.\napp.use(express.static('public', { maxAge: '1h' }))\n\nmorgan.token('url', req => decodeURIComponent(req.url ?? ''))\napp.use(morgan('tiny'))\n\n// When running tests or running in development, we want to effectively disable\n// rate limiting because playwright tests are very fast and we don't want to\n// have to wait for the rate limit to reset between tests.\nconst maxMultiple = process.env.TESTING ? 10_000 : 1\nconst rateLimitDefault = {\n  windowMs: 60 * 1000,\n  max: 1000 * maxMultiple,\n  standardHeaders: true,\n  legacyHeaders: false,\n}\n\nconst strongestRateLimit = rateLimit({\n  ...rateLimitDefault,\n  max: 10 * maxMultiple,\n})\n\nconst strongRateLimit = rateLimit({\n  ...rateLimitDefault,\n  max: 100 * maxMultiple,\n})\n\nconst generalRateLimit = rateLimit(rateLimitDefault)\napp.use((req, res, next) => {\n  const strongPaths = ['/signup', '/login']\n  if (req.method !== 'GET' && req.method !== 'HEAD') {\n    if (strongPaths.some(p => req.path.includes(p))) {\n      return strongestRateLimit(req, res, next)\n    }\n    return strongRateLimit(req, res, next)\n  }\n\n  return generalRateLimit(req, res, next)\n})\n\napp.all(\n  '*',\n  process.env.NODE_ENV === 'development'\n    ? (...args) =>\n        createRequestHandler({ build: devBuild, mode: MODE })(...args)\n    : createRequestHandler({ build, mode: MODE }),\n)\n\nconst portToUse = Number(process.env.PORT || 3000)\n\nconst server = app.listen(portToUse, () => {\n  const localUrl = `http://localhost:${portToUse}`\n  let lanUrl: string | null = null\n  const localIp = ipAddress() ?? 'Unknown'\n  // Check if the address is a private ip\n  // https://en.wikipedia.org/wiki/Private_network#Private_IPv4_address_spaces\n  // https://github.com/facebook/create-react-app/blob/d960b9e38c062584ff6cfb1a70e1512509a966e7/packages/react-dev-utils/WebpackDevServerUtils.js#LL48C9-L54C10\n  if (/^10[.]|^172[.](1[6-9]|2[0-9]|3[0-1])[.]|^192[.]168[.]/.test(localIp)) {\n    lanUrl = `http://${localIp}:${portToUse}`\n  }\n  console.log(\n    `\n${chalk.bold('Local:')}            ${chalk.cyan(localUrl)}\n${lanUrl ? `${chalk.bold('On Your Network:')}  ${chalk.cyan(lanUrl)}` : ''}\n${chalk.bold('Press Ctrl+C to stop')}\n\t\t`.trim(),\n  )\n\n  if (process.env.NODE_ENV === 'development') {\n    broadcastDevReady(build)\n  }\n})\n\ncloseWithGrace(async () => {\n  await new Promise((resolve, reject) => {\n    server.close(e => (e ? reject(e) : resolve('ok')))\n  })\n})\n\n// during dev, we'll keep the build module up to date with the changes\nif (process.env.NODE_ENV === 'development') {\n  // eslint-disable-next-line no-inner-declarations\n  async function reloadBuild() {\n    devBuild = await import(`${BUILD_PATH}?update=${Date.now()}`)\n    broadcastDevReady(devBuild)\n  }\n\n  const chokidar = await import('chokidar')\n  const dirname = path.dirname(fileURLToPath(import.meta.url))\n  const watchPath = path.join(dirname, WATCH_PATH).replace(/\\\\/g, '/')\n\n  const buildWatcher = chokidar\n    .watch(watchPath, { ignoreInitial: true })\n    .on('add', reloadBuild)\n    .on('change', reloadBuild)\n\n  closeWithGrace(async () => {\n    await buildWatcher.close()\n  })\n}\n"],
  "mappings": "AAAA,OAAO,UAAU;AACjB,SAAS,qBAAqB;AAC9B,SAAS,4BAA4B;AACrC,SAAS,yBAA2C;AACpD,SAAS,MAAM,iBAAiB;AAChC,OAAO,WAAW;AAClB,OAAO,oBAAoB;AAC3B,OAAO,iBAAiB;AACxB,OAAO,aAAa;AACpB,OAAO,YAAY;AACnB,OAAO,eAAe;AAEtB,MAAM,OAAO,QAAQ,IAAI;AACzB,MAAM,aAAa;AACnB,MAAM,aAAa;AAEnB,MAAM,QAAqB,MAAM,OAAO;AACxC,IAAI,WAAW;AAEf,MAAM,MAAM,QAAQ;AAEpB,MAAM,UAAU,CAAC,QACf,IAAI,IAAI,kBAAkB,KAAK,IAAI,IAAI,MAAM,KAAK;AAGpD,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS;AAC1B,QAAM,QAAQ,IAAI,IAAI,mBAAmB;AACzC,QAAM,OAAO,QAAQ,GAAG;AACxB,MAAI,UAAU,QAAQ;AACpB,QAAI,IAAI,qBAAqB,OAAO;AACpC,QAAI,SAAS,WAAW,IAAI,GAAG,IAAI,WAAW,EAAE;AAChD;AAAA,EACF;AACA,OAAK;AACP,CAAC;AAID,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS;AAC1B,MAAI,IAAI,KAAK,SAAS,GAAG,KAAK,IAAI,KAAK,SAAS,GAAG;AACjD,UAAM,QAAQ,IAAI,IAAI,MAAM,IAAI,KAAK,MAAM;AAC3C,UAAM,WAAW,IAAI,KAAK,MAAM,GAAG,EAAE,EAAE,QAAQ,QAAQ,GAAG;AAC1D,QAAI,SAAS,KAAK,WAAW,KAAK;AAAA,EACpC,OAAO;AACL,SAAK;AAAA,EACP;AACF,CAAC;AAED,IAAI,IAAI,YAAY,CAAC;AAGrB,IAAI,QAAQ,cAAc;AAG1B,IAAI;AAAA,EACF;AAAA,EACA,QAAQ,OAAO,gBAAgB,EAAE,WAAW,MAAM,QAAQ,KAAK,CAAC;AAClE;AAGA,IAAI;AAAA,EACF;AAAA,EACA,QAAQ,OAAO,gBAAgB,EAAE,WAAW,MAAM,QAAQ,KAAK,CAAC;AAClE;AAIA,IAAI,IAAI,QAAQ,OAAO,UAAU,EAAE,QAAQ,KAAK,CAAC,CAAC;AAElD,OAAO,MAAM,OAAO,SAAO,mBAAmB,IAAI,OAAO,EAAE,CAAC;AAC5D,IAAI,IAAI,OAAO,MAAM,CAAC;AAKtB,MAAM,cAAc,QAAQ,IAAI,UAAU,MAAS;AACnD,MAAM,mBAAmB;AAAA,EACvB,UAAU,KAAK;AAAA,EACf,KAAK,MAAO;AAAA,EACZ,iBAAiB;AAAA,EACjB,eAAe;AACjB;AAEA,MAAM,qBAAqB,UAAU;AAAA,EACnC,GAAG;AAAA,EACH,KAAK,KAAK;AACZ,CAAC;AAED,MAAM,kBAAkB,UAAU;AAAA,EAChC,GAAG;AAAA,EACH,KAAK,MAAM;AACb,CAAC;AAED,MAAM,mBAAmB,UAAU,gBAAgB;AACnD,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS;AAC1B,QAAM,cAAc,CAAC,WAAW,QAAQ;AACxC,MAAI,IAAI,WAAW,SAAS,IAAI,WAAW,QAAQ;AACjD,QAAI,YAAY,KAAK,OAAK,IAAI,KAAK,SAAS,CAAC,CAAC,GAAG;AAC/C,aAAO,mBAAmB,KAAK,KAAK,IAAI;AAAA,IAC1C;AACA,WAAO,gBAAgB,KAAK,KAAK,IAAI;AAAA,EACvC;AAEA,SAAO,iBAAiB,KAAK,KAAK,IAAI;AACxC,CAAC;AAED,IAAI;AAAA,EACF;AAAA,EACA,QAAQ,IAAI,aAAa,gBACrB,IAAI,SACF,qBAAqB,EAAE,OAAO,UAAU,MAAM,KAAK,CAAC,EAAE,GAAG,IAAI,IAC/D,qBAAqB,EAAE,OAAO,MAAM,KAAK,CAAC;AAChD;AAEA,MAAM,YAAY,OAAO,QAAQ,IAAI,QAAQ,GAAI;AAEjD,MAAM,SAAS,IAAI,OAAO,WAAW,MAAM;AACzC,QAAM,WAAW,oBAAoB,SAAS;AAC9C,MAAI,SAAwB;AAC5B,QAAM,UAAU,UAAU,KAAK;AAI/B,MAAI,wDAAwD,KAAK,OAAO,GAAG;AACzE,aAAS,UAAU,OAAO,IAAI,SAAS;AAAA,EACzC;AACA,UAAQ;AAAA,IACN;AAAA,EACF,MAAM,KAAK,QAAQ,CAAC,eAAe,MAAM,KAAK,QAAQ,CAAC;AAAA,EACvD,SAAS,GAAG,MAAM,KAAK,kBAAkB,CAAC,KAAK,MAAM,KAAK,MAAM,CAAC,KAAK,EAAE;AAAA,EACxE,MAAM,KAAK,sBAAsB,CAAC;AAAA,IAChC,KAAK;AAAA,EACP;AAEA,MAAI,QAAQ,IAAI,aAAa,eAAe;AAC1C,sBAAkB,KAAK;AAAA,EACzB;AACF,CAAC;AAED,eAAe,YAAY;AACzB,QAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AACrC,WAAO,MAAM,OAAM,IAAI,OAAO,CAAC,IAAI,QAAQ,IAAI,CAAE;AAAA,EACnD,CAAC;AACH,CAAC;AAGD,IAAI,QAAQ,IAAI,aAAa,eAAe;AAE1C,iBAAe,cAAc;AAC3B,eAAW,MAAM,OAAO,GAAG,UAAU,WAAW,KAAK,IAAI,CAAC;AAC1D,sBAAkB,QAAQ;AAAA,EAC5B;AAEA,QAAM,WAAW,MAAM,OAAO,UAAU;AACxC,QAAM,UAAU,KAAK,QAAQ,cAAc,YAAY,GAAG,CAAC;AAC3D,QAAM,YAAY,KAAK,KAAK,SAAS,UAAU,EAAE,QAAQ,OAAO,GAAG;AAEnE,QAAM,eAAe,SAClB,MAAM,WAAW,EAAE,eAAe,KAAK,CAAC,EACxC,GAAG,OAAO,WAAW,EACrB,GAAG,UAAU,WAAW;AAE3B,iBAAe,YAAY;AACzB,UAAM,aAAa,MAAM;AAAA,EAC3B,CAAC;AACH;",
  "names": []
}
